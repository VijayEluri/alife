package jml.util;
import jml.basics.Algorithm;
import jml.basics.Result;
import jml.basics.Tracer;

/**
 * <p>Title: IterativeTracer</p>
 * <p>Description: Structure to manage a IterativeAlgotithmStatistics.</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: Universidad Nacional de Colombia</p>
 * @author Jonatan Gomez
 * @version 1.0
 */
public class IterativeTracer implements Tracer {
 /**
  * Results generated by the iterative algorithm iteration by iteration
  */
  private IterativeAlgorithmStatistics traceStatistics = null;

  /**
   * Creates a new IterativeTracer 
   */
  public IterativeTracer() {
    traceStatistics = new IterativeAlgorithmStatistics();
  }
  
  /**
   * Adds a new Object into Algorithm
   * @param alg Algorithm
   * @param obj The object to add
   */
  public void add(Algorithm alg, Object obj) {
    traceStatistics.add((Result) obj);
  }
  
  /**
   * Return the IterativeAlgorithmStatistics object
   * @return IterativeAlgorithmStatistics
   */
  public Result getStat() { return traceStatistics; }
}

